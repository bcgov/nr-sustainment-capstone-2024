name: quackstack-nmp
services:
  ##########################################################
  #                      DB                                #
  ##########################################################
  database:
    image: postgres:15
    container_name: quackStack-db
    env_file:
      - path: ./.env
        required: false
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-admin}
      POSTGRES_HOST: ${POSTGRES_HOST:-host.docker.internal}
    ports:
      - ${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./database/db/entrypoint:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-admin}"]
      interval: 20s
      timeout: 30s
      retries: 5
      start_period: 20s
    networks:
      - quackStack-network

  ####################
  #     PGAdmin      #
  ####################
  pgadmin:
    image: dpage/pgadmin4
    container_name: quackStack-pgadmin
    ports:
      - 5050:80
    env_file:
      - path: ./.env
        required: false
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@qs.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    networks:
      - quackStack-network

  ###################
  #   Backend      #
  ###################
  backend:
    container_name: quackStack-api
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - path: ./backend/.env
        required: false
    environment:
      API_PORT: ${API_PORT:-3000}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-admin}
      POSTGRES_HOST: ${POSTGRES_HOST:-host.docker.internal}
    ports:
      - ${API_PORT:-3000}:${API_PORT:-3000}
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /backend/src
          ignore:
            - node_modules
    healthcheck:
      test: curl localhost:${PORT:-3000}/api/health | grep 'NMP API is healthy and ready!'
      interval: 20s
      timeout: 30s
      retries: 5
      start_period: 20s
    depends_on:
      database:
        condition: service_healthy
    networks:
      - quackStack-network

  ##########################################################
  #                      FrontEnd                          #
  ##########################################################
  frontend:
    container_name: quackStack-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run serve
    environment:
      - VITE_FRONTEND_PORT=${VITE_PORT:-5173}
      - VITE_FRONTEND_URL=${VITE_FRONTEND_URL:-http://localhost:5173}
      - VITE_BACKEND_PORT=${VITE_PORT:-3000}
      - VITE_BACKEND_URL=${VITE_BACKEND_URL:-http://localhost:3000}
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /frontend
          ignore:
            - node_modules
    ports:
      - ${PORT:-5173}:5173
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5173 || exit 1"]
      interval: 20s
      timeout: 30s
      retries: 5
      start_period: 20s
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - quackStack-network

###################
#   Networks      #
###################
networks:
  quackStack-network:
    driver: "bridge"
volumes:
  postgres:
    name: quackStack-db-vol-postgres
